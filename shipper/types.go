package shipper

import "encoding/json"

type Order struct {
	OrderID   string   `json:"_id"`
	UserID    *string  `json:"userid,omitempty"`
	Firstname *string  `json:"firstname,omitempty"`
	Lastname  *string  `json:"lastname,omitempty"`
	Address   *Address `json:"address,omitempty"`
	Email     *string  `json:"email,omitempty"`
	Delivery  string   `json:"delivery"`
	Card      *Card    `json:"card,omitempty"`
	Cart      []Cart   `json:"cart"`
	Total     *string  `json:"total,omitempty"`
}

func unmarshalOrder(data []byte) (Order, error) {
	var r Order
	err := json.Unmarshal(data, &r)
	return r, err
}

type Address struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	Zip     *string `json:"zip,omitempty"`
	State   *string `json:"state,omitempty"`
	Country *string `json:"country,omitempty"`
}

type Card struct {
	Type     *string `json:"type,omitempty"`
	Number   *string `json:"number,omitempty"`
	ExpMonth *string `json:"expMonth,omitempty"`
	ExpYear  *string `json:"expYear,omitempty"`
	Ccv      *string `json:"ccv,omitempty"`
}

type Cart struct {
	ID          *string `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
	Quantity    *string `json:"quantity,omitempty"`
	Price       *string `json:"price,omitempty"`
}

// Shipment contains all fields that the shipping service needs to work. The
// TrackingNumber is generated by the shipper, which also determines the Status.
// The OrderNumber comes from the OrderID field received from the orderservice.
type Shipment struct {
	TrackingNumber string `json:"trackingNumber"`
	OrderNumber    string `json:"orderNumber"`
	Status         string `json:"status"`
}

// Marshal takes a shipment and turns it into a string
func (r *Shipment) Marshal() (string, error) {
	s, err := json.Marshal(r)
	if err != nil {
		return "", err
	}
	return string(s), nil
}
